
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="text-align:center">
    <h2>New Rental</h2>
    <br />
    <br />
</div>

<div class="container center-block">
    <div class="row">
        <div class="col-sm-6 col-sm-offset-4 col-md-6 col-md-offset-4">
            <form id="newRental">

                <div class="form-group row">
                    <label class="col-sm-3 col-form-label">Customer</label>
                    <div class="col-sm-9">
                        <input id="customer" name="customer" class="form-control" type="text" value="" />
                    </div>
                </div>

                <div class="form-group row">
                    <label class="col-sm-3 col-form-label">Movie</label>
                    <div class="col-sm-9">
                        <input id="movie" name="movie" class="form-control" type="text" value="" />
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4 col-md-offset-4 col-sm-4 col-sm-offset-4">
                        <ul id="movies" class="list-group"></ul>
                    </div>
                </div>

                <button class="btn btn-primary col-md-2 col-md-offset-3">Submit</button>

            </form>
        </div>
    </div>
</div>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");
    <script>
        $(document).ready(function () {

            var vm = { MovieIDs: [] };
            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers/all?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead(
                {
                    highlight: true,
                    minLength: 3
                }, {
                    name: 'movies',
                    display: 'name',
                    source: movies
                }).on("typeahead:select", function (e, movie) {
                    $("#movies").append("<li class='list-group-item d-flex justify-content-between align-items-center'>" + movie.name + "<span movie-id='" + movie.id + "' class='badge badge-primary badge-pill js-cancel'>x</span>" + "</li>");
                    $("#movie").typeahead("val", "");
                    vm.MovieIDs.push(movie.id);
                });

            $('#movies').on("click", ".js-cancel", function () {
                var cancel = $(this);
                var number = parseInt(cancel.attr("movie-id"));
                var index = vm.MovieIDs.indexOf(number);
                if (index > -1) {
                    vm.MovieIDs.splice(index, 1);
                }
                cancel.parent("li").remove();
            });

            $('#customer').typeahead(
                {
                    highlight: true,
                    minLength: 3
                }, {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.CustomerID = customer.id;
                });

            $.validator.addMethod("validCustomerWithId", function () {
                return vm.CustomerID && vm.CustomerID !== 0;
            }, "Please select a valid customer.");

            $.validator.addMethod("atLeastOneMovie", function () {
                return vm.MovieIDs.length > 0;
            }, "Please select at least one movie.");

            var validator = $("#newRental").validate({
                rules: {
                    customer: { validCustomerWithId: true },
                    movie: { atLeastOneMovie: true }
                },

                submitHandler: function () {
                    $.ajax({
                        url: "/api/rentals/rent",
                        method: "post",
                        data: vm
                    })
                        .done(function () {
                            toastr.success("Rentals recorded successfully");
                            $("#customer").typeahead("val", "");
                            $("#movie").typeahead("val", "");
                            $("#movies").empty();
                            vm = { MovieIDs: [] };
                            validator.resetForm();
                        }).fail(function () {
                            toastr.error("Something went wrong");
                        });
                    return false;
                }
            });

            //$('#newRental').submit(function (e) {
            //    e.preventDefault();

            //    $.ajax({
            //        url: "/api/rentals/rent",
            //        method: "post",
            //        data: vm
            //    }).done(function () {
            //        toastr.success("Rentals recorded successfully");
            //    }).fail(function () {
            //        toastr.error("Something went wrong");
            //    });
            //});
        });
    </script>
}
